{"ast":null,"code":"var _jsxFileName = \"/home/alvaro/IW/proyecto_iw/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Vehiculos from './data/Vehiculos';\nimport VehiculosView from './views/VehiculosView';\nimport IniciarSesion from \"./componentes/IniciarSesion\";\nimport RegistroSesion from \"./componentes/RegistroSesion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routes = [{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/iniciarSesion\",\n  element: /*#__PURE__*/_jsxDEV(IniciarSesion, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this)\n}, {\n  path: \"/registroSesion\",\n  element: /*#__PURE__*/_jsxDEV(RegistroSesion, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this)\n}];\nVehiculos.forEach(Vehiculo => {\n  routes.push({\n    path: Vehiculo.titulo,\n    element: /*#__PURE__*/_jsxDEV(VehiculosView, {\n      vehiculo: Vehiculo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this)\n  });\n});\nconst router = createBrowserRouter(routes);\nconst root = ReactDOM.createRoot(document.getElementById('root')).render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 5\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","createBrowserRouter","RouterProvider","Vehiculos","VehiculosView","IniciarSesion","RegistroSesion","jsxDEV","_jsxDEV","routes","path","element","fileName","_jsxFileName","lineNumber","columnNumber","forEach","Vehiculo","push","titulo","vehiculo","router","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["/home/alvaro/IW/proyecto_iw/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Vehiculos from './data/Vehiculos';\nimport VehiculosView from './views/VehiculosView';\nimport IniciarSesion from \"./componentes/IniciarSesion\"\nimport RegistroSesion from \"./componentes/RegistroSesion\"\n\nconst routes = [\n  {\n    path: \"/\",\n    element: <App/>,\n  },\n  {\n    path: \"/iniciarSesion\",\n    element:<IniciarSesion/>,\n  },\n  {\n    path: \"/registroSesion\",\n    element:<RegistroSesion/>,\n  }\n];\n\nVehiculos.forEach((Vehiculo) => {\n  routes.push({\n    path: Vehiculo.titulo,\n    element: <VehiculosView vehiculo={Vehiculo}/>,\n  })\n})\n\nconst router = createBrowserRouter(routes);\n\nconst root = ReactDOM.createRoot(document.getElementById\n  ('root')).render(\n    <React.StrictMode>\n      <RouterProvider router={router}/>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,cAAc,MAAM,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACT,GAAG;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAChB,CAAC,EACD;EACEL,IAAI,EAAE,gBAAgB;EACtBC,OAAO,eAACH,OAAA,CAACH,aAAa;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AACzB,CAAC,EACD;EACEL,IAAI,EAAE,iBAAiB;EACvBC,OAAO,eAACH,OAAA,CAACF,cAAc;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAC1B,CAAC,CACF;AAEDZ,SAAS,CAACa,OAAO,CAAEC,QAAQ,IAAK;EAC9BR,MAAM,CAACS,IAAI,CAAC;IACVR,IAAI,EAAEO,QAAQ,CAACE,MAAM;IACrBR,OAAO,eAAEH,OAAA,CAACJ,aAAa;MAACgB,QAAQ,EAAEH;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAC9C,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAMM,MAAM,GAAGpB,mBAAmB,CAACQ,MAAM,CAAC;AAE1C,MAAMa,IAAI,GAAGxB,QAAQ,CAACyB,UAAU,CAACC,QAAQ,CAACC,cAAc,CACrD,MAAM,CAAC,CAAC,CAACC,MAAM,eACdlB,OAAA,CAACX,KAAK,CAAC8B,UAAU;EAAAC,QAAA,eACfpB,OAAA,CAACN,cAAc;IAACmB,MAAM,EAAEA;EAAO;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACjB,CACtB,CAAC;;AAED;AACA;AACA;AACAf,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}